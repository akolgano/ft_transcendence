version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
           POSTGRES_HOST: ${POSTGRES_HOST}
           POSTGRES_DB: ${POSTGRES_DB}
           POSTGRES_USER: ${POSTGRES_USER}
           POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  django:
    container_name: django
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PIPELINE: local
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: admin
      DJANGO_SUPERUSER_EMAIL: barbayjuliette95@gmail.com
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    volumes:
      - ./frontend:/usr/share/nginx/html 
      - ./logs:/var/log/nginx
      - ./pong/staticfiles:/app/pong/staticfiles
      - ./pong/media:/app/pong/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    restart: always
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.10.2
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elastic:${ELASTIC_PASSWORD}@elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.0
    ports:
      - "5044:5044"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
volumes:
  postgres_data:
  esdata:
networks:
  default:
    driver: bridge
